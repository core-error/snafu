[package]
name = "snafu"
version = "0.5.0"
authors = ["Jake Goulding <jake.goulding@gmail.com>"]
edition = "2018"

readme = "README.md"
description = "An ergonomic error handling library"
documentation = "https://docs.rs/snafu"
repository = "https://github.com/shepmaster/snafu"

license = "MIT OR Apache-2.0"

keywords = ["error", "ergonomic", "library", "no_std"]
categories = ["rust-patterns", "no-std"]

exclude = [
  "/.cirrus.yml",
  "/.gitignore",
  "/rust-toolchain",
]

[package.metadata.docs.rs]
all-features = true

[features]
default = ["backtraces", "std"]

# Implement the `std::error::Error` trait.
std = ["core-error/std", "snafu-derive/std"]

# Adds the backtrace type
backtraces = ["std", "snafu-derive/backtraces", "backtrace"]

# Add conversion to `backtrace::Backtrace`
backtrace-crate = ["backtraces"]

# Add extension traits for the futures 0.1 crate
"futures-01" = ["futures01"]

# The standard library's implementation of futures
"unstable-futures" = ["futures-core-preview", "pin-project"]

# No public user should make use of this feature
# https://github.com/rust-lang/cargo/issues/1596
"internal-dev-dependencies" = ["futures-preview"]

[workspace]
# The compatibility tests each set feature flags for the library and
# cannot be in the same crate graph.
exclude = ["compatibility-tests"]

[dependencies]
snafu-derive = { path = "snafu-derive", version = "0.5.0" }
doc-comment = { version = "0.3.1", default-features = false }
backtrace = { version = "0.3.0", optional = true }
futures01 = { version = "0.1", optional = true, default-features = false }
futures-preview = { version = "0.3.0-alpha.16", optional = true, default-features = false }
futures-core-preview = { version = "0.3.0-alpha.16", optional = true, default-features = false }
pin-project = { version = "0.4", optional = true, default-features = false }
core-error = { git = "https://github.com/core-error/core-error.git", default-features = false }

[dev-dependencies]
core-error = { git = "https://github.com/core-error/core-error.git", default-features = false, features = ["alloc"] }
